@model Site.Core.DataModel.Model.UserModel
@{
    ViewBag.Title = "Cập Nhật Người Dùng";
    Layout = "~/Areas/Administrator/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-sm-12">
        <!--Alert-->
        @if (ViewBag.Message != null)
        {
            Site.Core.DataModel.Response.BaseResponse responseMsg = (Site.Core.DataModel.Response.BaseResponse)ViewBag.Message;
            <br />
            <div class="alert @(responseMsg.ErrorCode == (int)Site.Core.DataModel.Enum.ErrorCode.None ? " alert-info" : " alert-danger")"><a class="close" data-dismiss="alert" href="#">×</a><strong></strong> @responseMsg.Message</div>
        }
        
        <div class="box box-bordered box-color">
            <div class="box-title">
                <h3>
                    <i class="fa fa-edit"></i>Cập Nhập Người Dùng
                </h3>
            </div>
            <div class="box-content nopadding">
                @using (Html.BeginForm("SaveUpdateUser", "AdminUser", FormMethod.Post, new { @class = "form-horizontal form-bordered" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.UserID)
                    <div class="form-group">
                        <label for="Title" class="control-label col-sm-2">Danh nghĩa</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.Title, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.Title)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="FullName" class="control-label col-sm-2">Tên đầy đủ</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.FullName)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Sex" class="control-label col-sm-2">Giới tính</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.Sex, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.Sex)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Email" class="control-label col-sm-2">Email</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.Email)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="OtherEmail" class="control-label col-sm-2">Email khác</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.OtherEmail, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.OtherEmail)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="DateOfBirth" class="control-label col-sm-2">Ngày sinh</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.DateOfBirth)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="PhoneNumber" class="control-label col-sm-2">Số điện thoại</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.PhoneNumber)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="UserName" class="control-label col-sm-2">Tên Đăng Nhập</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.UserName)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="CreatedDate" class="control-label col-sm-2">Ngày đăng ký</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.CreatedDate, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.CreatedDate)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="MealPreference" class="control-label col-sm-2">Bữa ăn</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.MealPreference, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.MealPreference)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="DisabilitySpecialTreatment" class="control-label col-sm-2">Đối đãi đặc biệt người tàn tật</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.DisabilitySpecialTreatment, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.DisabilitySpecialTreatment)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Address" class="control-label col-sm-2">Địa chỉ</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.Address, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.Address)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="City" class="control-label col-sm-2">Thành phố</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.City, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.City)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Country" class="control-label col-sm-2">Quốc gia</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.Country, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.Country)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="WorkAddress" class="control-label col-sm-2">Địa chỉ làm việc</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.WorkAddress, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.WorkAddress)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Organization" class="control-label col-sm-2">Tổ chức</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.Organization, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.Organization)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Locked" class="control-label col-sm-2">Trạng Thái</label>
                        <div class="col-sm-10">
                            <div class="check-demo-col">
                                <div class="check-line">
                                    <input type="radio" name="Locked" id="Locked" class='icheck-me' data-skin="square" data-color="blue" value="false" @(Model.Locked ? "" : "checked")>
                                    <label class='inline' for="Locked">Kích Hoạt</label>
                                </div>
                                <div class="check-line">
                                    <input type="radio" name="Locked" id="Locked" class='icheck-me' data-skin="square" data-color="blue" value="true" @(Model.Locked ? "checked" : "")>
                                    <label class='inline' for="Locked">Khóa</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-actions col-sm-offset-2 col-sm-10">
                        <button type="submit" class="btn btn-primary">Lưu Thông Tin</button>
                        <button type="reset" class="btn">Reset</button>
                        <a href='@Url.Action("Index")' class="btn btn-info">Hủy Bỏ</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
