@model Site.Core.DataModel.Model.UserModel
@{
    ViewBag.Title = "View User";
    Layout = "~/Areas/Administrator/Views/Shared/_Layout.cshtml";
}

<link href="~/Scripts/jquery.datetimepicker.css" rel="stylesheet" />
<script src="~/Scripts/jquery.datetimepicker.full.js"></script>

<div class="row">
    <div class="col-sm-12">
        <div class="box box-color">
            <div class="box-title">
                <h3>
                    <i class="fa fa-bars"></i>
                    Hội viên
                </h3>
                <ul class="tabs">
                    <li class="active">
                        <a href="#t7" data-toggle="tab">General</a>
                    </li>
                    <li>
                        <a href="#t8" data-toggle="tab">Abstract</a>
                    </li>
                    <li>
                        <a href="#t9" data-toggle="tab">@(ViewBag.ScholarshipTitleMain != null ? ViewBag.ScholarshipTitleMain : "Main is not available")</a>
                    </li>
                    <li>
                        <a href="#t10" data-toggle="tab">@(ViewBag.ScholarshipTitleYouth != null ? ViewBag.ScholarshipTitleYouth : "Youth is not available")</a>
                    </li>
                    @if (ViewBag.ScholarshipTitleYouth != null)
                    { 
                    <li>
                        <a href="#t11" data-toggle="tab">Working experience</a>
                    </li>
                    <li>
                        <a href="#t12" data-toggle="tab">Education</a>
                    </li>
                    <li>
                        <a href="#t13" data-toggle="tab">Additional training</a>
                    </li>
                    <li>
                        <a href="#t14" data-toggle="tab">Leadership</a>
                    </li>
                    <li>
                        <a href="#t15" data-toggle="tab">Publication</a>
                    </li>
                    }
                    <li>
                        <a href="#t16" data-toggle="tab">Payments</a>
                    </li>
                    <li>
                        <a href="#t17" data-toggle="tab">Logistic Arrangement</a>
                    </li>
                </ul>
            </div>
            <div class="box-content">
                <div class="tab-content">

                    <!--Start general information-->
                    <div class="tab-pane active" id="t7">
                        <div class="box-content nopadding">
                            @using (Html.BeginForm("SaveUpdateUser", "AdminUser", FormMethod.Post, new { @class = "form-horizontal form-bordered" }))
                            {
                                
                                @Html.HiddenFor(m => m.UserID)
                                <div class="form-group">
                                    <label for="Title" class="control-label col-sm-2">Title</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Title)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="FullName" class="control-label col-sm-2">Fullname</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.FullName)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="Sex" class="control-label col-sm-2">Sex</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.Sex, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Sex)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="Email" class="control-label col-sm-2">Email</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Email)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="OtherEmail" class="control-label col-sm-2">Other email</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.OtherEmail, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.OtherEmail)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="DateOfBirth" class="control-label col-sm-2">Date of birth</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.DateOfBirth)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="PhoneNumber" class="control-label col-sm-2">Phone</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.PhoneNumber)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="PhoneNumber" class="control-label col-sm-2">Passport</label>
                                    <div class="col-sm-10">
                                        @{
                                            Site.Core.DataModel.Model.MailingAddressModel mailing = (Site.Core.DataModel.Model.MailingAddressModel)ViewBag.Mailing;
                                        }
                                        <img class="fileinput-preview thumbnail" src="@(mailing != null ? mailing.PassportPhoto1 : "")" style="width: 200px; height: 150px; display: inline-block;" />
                                        <img class="fileinput-preview thumbnail" src="@(mailing != null ? mailing.PassportPhoto2 : "")" style="width: 200px; height: 150px; display: inline-block;" />
                                        <img class="fileinput-preview thumbnail" src="@(mailing != null ? mailing.PassportPhoto3 : "")" style="width: 200px; height: 150px; display: inline-block;" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="UserName" class="control-label col-sm-2">Username</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.UserName)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="CreatedDate" class="control-label col-sm-2">Registration date</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.CreatedDate, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.CreatedDate)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="Locked" class="control-label col-sm-2">Status</label>
                                    <div class="col-sm-10">
                                        <div class="check-demo-col">
                                            <div class="check-line">
                                                <input type="radio" name="Locked" id="Locked" readonly="readonly" class='icheck-me' data-skin="square" data-color="blue" value="false" @(Model.Locked ? "" : "checked")>
                                                <label class='inline' for="Locked">Actived</label>
                                            </div>
                                            <div class="check-line">
                                                <input type="radio" name="Locked" id="Locked" readonly="readonly" class='icheck-me' data-skin="square" data-color="blue" value="true" @(Model.Locked ? "checked" : "")>
                                                <label class='inline' for="Locked">Locked</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="MealPreference" class="control-label col-sm-2">Meal preference</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.MealPreference, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.MealPreference)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="DisabilitySpecialTreatment" class="control-label col-sm-2">Disability or special treatment</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.DisabilitySpecialTreatment, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.DisabilitySpecialTreatment)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="Address" class="control-label col-sm-2">Address</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Address)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="City" class="control-label col-sm-2">City</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.City)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="Country" class="control-label col-sm-2">Country</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.Country, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Country)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="WorkAddress" class="control-label col-sm-2">Work address</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.WorkAddress, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.WorkAddress)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="Organization" class="control-label col-sm-2">Organization</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.Organization, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Organization)
                                    </div>
                                </div>
                                @*<div class="form-actions col-sm-offset-2 col-sm-10">
                                    <button type="submit" class="btn btn-primary">Lưu Thông Tin</button>
                                    <button type="reset" class="btn">Reset</button>
                                    <a href='@Url.Action("Index")' class="btn btn-info">Hủy Bỏ</a>
                                </div>*@
                            }
                        </div>
                    </div>
                    <!--End general information-->

                    <!--Start abstract-->
                    <div class="tab-pane" id="t8">
                        @if (ViewBag.Abstracts != null)
                        {
                            IList<Site.Core.DataModel.Model.UserSubmissionModel> abstracts = (IList<Site.Core.DataModel.Model.UserSubmissionModel>)ViewBag.Abstracts;
                            <div class="box-content nopadding">
                                <table class="table table-hover table-nomargin table-bordered dataTable dataTable-column_filter"
                                       data-column_filter_types="text,daterange,text,null"
                                       data-column_filter_dateformat="dd-mm-yy" data-nosort="0" data-checkall="all">
                                    <thead>
                                        <tr>
                                            <th>Submission Number</th>
                                            <th>Assigned Date</th>
                                            <th>Review Status</th>
                                            <th class='hidden-480'>Tùy Chọn</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in abstracts)
                                        {
                                            <tr id="@item.SubmitID">
                                                <td>@item.SubmissionNumber</td>
                                                <td>@item.CreatedDate.ToShortDateString()</td>
                                                <td>@apcrshr_site.Helper.DataHelper.GetInstance().GetAbstractStatusName(item.Status)</td>
                                                <td class='hidden-480'>
                                                    <a target="_blank" href='@Url.Action("UpdateAbstract", "AdminUser", new { submitID = item.SubmitID })' class="btn" rel="tooltip" title="Sửa">
                                                        <i class="fa fa-edit"></i>
                                                    </a>
                                                    <a href="javascript:void(0)" class="btn" rel="tooltip" title="Xóa" onclick="return deleteAbstract('@item.SubmitID')" id="btn_@item.SubmitID">
                                                        <i class="fa fa-times"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                    <!--End abstract-->

                    <!--Start main scholarship-->
                    <div class="tab-pane" id="t9">
                        @if (ViewBag.ScholarshipTitleMain == null)
                        {
                            <h4>This user hasn't submit main scholarship form</h4>
                        }
                        else
                        {
                            IList<Site.Core.DataModel.Model.MainScholarshipModel> mainScholarship = (IList<Site.Core.DataModel.Model.MainScholarshipModel>)ViewBag.MainScholarship;
                            <div class="box-content nopadding">
                                <table class="table table-hover table-nomargin table-bordered dataTable dataTable-column_filter"
                                        data-column_filter_types="text,text,text,text,select,daterange,null"
                                        data-column_filter_dateformat="dd-mm-yy" data-nosort="0" data-checkall="all">
                                    <thead>
                                        <tr>
                                            <th>Organization</th>
                                            <th>Position</th>
                                            <th>Duration of Work</th>
                                            <th>SubmissionNumber</th>
                                            <th>Review Status</th>
                                            <th class='hidden-1024'>Submitted Date</th>
                                            <th class='hidden-480'>Tùy Chọn</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach(var item in mainScholarship)
                                        {
                                            <tr id="@item.ScholarshipID">
                                                <td>@item.Organization</td>
                                                <td>@item.Position</td>
                                                <td>@item.DurationOfWork</td>
                                                <td>@item.SubmissionNumber</td>
                                                <td>@apcrshr_site.Helper.DataHelper.GetInstance().GetScholarshipStatusName(item.Status)</td>
                                                <td class='hidden-1024'>@item.CreatedDate.ToShortDateString()</td>
                                                <td class='hidden-480'>
                                                    <a target="_blank" href='@Url.Action("UpdateMainScholarship", "AdminUser", new { scholarshipID = item.ScholarshipID })' class="btn" rel="tooltip" title="Sửa">
                                                        <i class="fa fa-edit"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                    <!--End main scholarship-->

                    <!--Start youth scholarship-->
                    <div class="tab-pane" id="t10">
                        @if (ViewBag.ScholarshipTitleYouth == null)
                        {
                            <h4>This user hasn't submit main scholarship form</h4>
                        }
                        else
                        {
                            Site.Core.DataModel.Model.YouthScholarshipModel youthScholarship = (Site.Core.DataModel.Model.YouthScholarshipModel)ViewBag.YouthScholarship;
                            <div class="box-content nopadding">
                                <form action="#" class="form-horizontal form-bordered">
                                    <div class="form-group">
                                        <label for="RegistrationNumber" class="control-label col-sm-2">Registration number</label>
                                        <div class="col-sm-10">
                                            <label class="form-control">@youthScholarship.RegistrationNumber</label>
                                        </div>
                                    </div>
                                    <div class="box-title">
                                        <h3>
                                            <i class="fa fa-check"></i>
                                            MOTIVATION
                                        </h3>
                                    </div>
                                    <div class="form-group">
                                        <label for="MotivationIssue" class="control-label col-sm-2">List 3 problems that young people in your country are facing now</label>
                                        <div class="col-sm-10">
                                            <textarea class="form-control" rows="6" readonly="readonly">@youthScholarship.MotivationIssue</textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="MotivationResolving" class="control-label col-sm-2">Have you participated in any activities/projects to solve these problems? How could you involve young people in your country to participate in youth activities?</label>
                                        <div class="col-sm-10">
                                            <textarea class="form-control" rows="6" readonly="readonly">@youthScholarship.MotivationResolving</textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="MotivationReason" class="control-label col-sm-2">What will you contribute to this conference? Why we should select you as youth scholars of this conference?</label>
                                        <div class="col-sm-10">
                                            <textarea class="form-control" rows="6" readonly="readonly">@youthScholarship.MotivationReason</textarea>
                                        </div>
                                    </div>
                                    <div class="box-title">
                                        <h3>
                                            <i class="fa fa-check"></i>
                                            MAKE A PLAN
                                        </h3>
                                    </div>
                                    <div class="form-group">
                                        <label for="PlanMaking" class="control-label col-sm-2">Present your plan after taking part in this conference</label>
                                        <div class="col-sm-10">
                                            <textarea class="form-control" rows="6" readonly="readonly">@youthScholarship.PlanMaking</textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="UploadFile" class="control-label col-sm-2">Uploaded file</label>
                                        <div class="col-sm-10">
                                            <a class="form-control" href="@youthScholarship.UploadFile" target="_blank">@(youthScholarship.UploadFile != null ? youthScholarship.UploadFile.Substring(youthScholarship.UploadFile.LastIndexOf("/") + 1) : "No attachment")</a>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        }
                    </div>
                    <!--End youth scholarship-->

                    <!--Start working experience-->
                    <div class="tab-pane" id="t11">
                        <table id="tblRole" class="table table-hover table-nomargin table-bordered dataTable dataTable-column_filter"
                               data-column_filter_types="null,text,text,daterange,daterange,text,null"
                               data-column_filter_dateformat="dd-mm-yy" data-nosort="0" data-checkall="all">
                            <thead>
                                <tr>
                                    <th class='with-checkbox'>
                                        <input type="checkbox" name="check_all" class="dataTable-checkall">
                                    </th>
                                    <th>Organization</th>
                                    <th>Position</th>
                                    <th>Working from</th>
                                    <th>Working to</th>
                                    <th>Duties</th>
                                    <th class='hidden-480'>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewBag.Experiences != null)
                                {
                                    IList<Site.Core.DataModel.Model.ExperienceModel> experiences = (IList<Site.Core.DataModel.Model.ExperienceModel>)ViewBag.Experiences;
                                    for (int i = 0; i < experiences.Count; i++)
                                    {
                                        <tr id="@experiences[i].WorkingID">
                                            <td class="with-checkbox">
                                                <input type="checkbox" name="check" value="@experiences[i].WorkingID">
                                            </td>
                                            <td>@experiences[i].Organization</td>
                                            <td>@experiences[i].Position</td>
                                            <td>@experiences[i].WorkingStart.ToShortDateString()</td>
                                            <td>@(experiences[i].WorkingEnd.HasValue ? experiences[i].WorkingEnd.Value.ToShortDateString() : "")</td>
                                            <td>@(experiences[i].Duties.Length > 50 ? experiences[i].Duties.Substring(0, 45) + "..." : experiences[i].Duties)</td>
                                            <td class='hidden-480'>
                                                <a href='javascript:void(0)' onclick="showExperience('@experiences[i].WorkingID')" class="btn" rel="tooltip" title="View">
                                                    <i class="fa fa-edit"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>

                    </div>
                    <!--End working experience-->

                    <!--Start education-->
                    <div class="tab-pane" id="t12">
                        <table class="table table-hover table-nomargin table-bordered dataTable dataTable-column_filter"
                               data-column_filter_types="null,text,select,daterange,daterange,text,select,null"
                               data-column_filter_dateformat="dd-mm-yy" data-nosort="0" data-checkall="all">
                            <thead>
                                <tr>
                                    <th class='with-checkbox'>
                                        <input type="checkbox" name="check_all" class="dataTable-checkall">
                                    </th>
                                    <th>Degree/Diplomas obtained</th>
                                    <th>Country</th>
                                    <th>Attended from</th>
                                    <th>Attended to</th>
                                    <th>Main course of study</th>
                                    <th>Type of training</th>
                                    <th class='hidden-480'>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                if (ViewBag.Educations != null)
                                {
                                    IList<Site.Core.DataModel.Model.EducationModel> educations = (IList<Site.Core.DataModel.Model.EducationModel>)ViewBag.Educations;
                                    for (int i = 0; i < educations.Count; i++)
                                    {
                                        <tr id="@educations[i].EducationID">
                                            <td class="with-checkbox">
                                                <input type="checkbox" name="check" value="@educations[i].EducationID">
                                            </td>
                                            <td>@educations[i].Degree</td>
                                            <td>@educations[i].Country</td>
                                            <td>@educations[i].EducationStart.ToShortDateString()</td>
                                            <td>@(educations[i].EducationEnd.HasValue ? educations[i].EducationEnd.Value.ToShortDateString() : "")</td>
                                            <td>@educations[i].MainCourseStudy</td>
                                            <td>@educations[i].TypeOfTraining</td>
                                            <td class='hidden-480'>
                                                <a href='javascript:void(0)' onclick="showEducation('@educations[i].EducationID')" class="btn" rel="tooltip" title="View">
                                                    <i class="fa fa-edit"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                                }
                            </tbody>
                        </table>

                    </div>
                    <!--End education-->

                    <!--Start additional training-->
                    <div class="tab-pane" id="t13">
                        <table class="table table-hover table-nomargin table-bordered dataTable dataTable-column_filter"
                               data-column_filter_types="null,text,select,daterange,daterange,select,null"
                               data-column_filter_dateformat="dd-mm-yy" data-nosort="0" data-checkall="all">
                            <thead>
                                <tr>
                                    <th class='with-checkbox'>
                                        <input type="checkbox" name="check_all" class="dataTable-checkall">
                                    </th>
                                    <th>Name of course</th>
                                    <th>Country</th>
                                    <th>Attended from</th>
                                    <th>Attended to</th>
                                    <th>Type of training</th>
                                    <th class='hidden-480'>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewBag.Trainings != null)
                                {
                                    IList<Site.Core.DataModel.Model.TrainingModel> trainings = (IList<Site.Core.DataModel.Model.TrainingModel>)ViewBag.Trainings;
                                    for (int i = 0; i < trainings.Count; i++)
                                    {
                                        <tr id="@trainings[i].TrainingID">
                                            <td class="with-checkbox">
                                                <input type="checkbox" name="check" value="@trainings[i].TrainingID">
                                            </td>
                                            <td>@trainings[i].NameOfCourse</td>
                                            <td>@trainings[i].Country</td>
                                            <td>@trainings[i].TrainingStart.ToShortDateString()</td>
                                            <td>@(trainings[i].TrainingEnd.HasValue ? trainings[i].TrainingEnd.Value.ToShortDateString() : "")</td>
                                            <td>@trainings[i].TypeOfTraining</td>
                                            <td class='hidden-480'>
                                                <a href='javascript:void(0)' onclick="showTraining('@trainings[i].TrainingID')" class="btn" rel="tooltip" title="View">
                                                    <i class="fa fa-edit"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>

                    </div>
                    <!--End additional training-->

                    <!--Start leadership-->
                    <div class="tab-pane" id="t14">
                        <table class="table table-hover table-nomargin table-bordered dataTable dataTable-column_filter"
                               data-column_filter_types="null,text,text,daterange,daterange,text,null"
                               data-column_filter_dateformat="dd-mm-yy" data-nosort="0" data-checkall="all">
                            <thead>
                                <tr>
                                    <th class='with-checkbox'>
                                        <input type="checkbox" name="check_all" class="dataTable-checkall">
                                    </th>
                                    <th>Organization/Group</th>
                                    <th>Position</th>
                                    <th>From</th>
                                    <th>To</th>
                                    <th>Duties</th>
                                    <th class='hidden-480'>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewBag.Leaderships != null)
                                {
                                    IList<Site.Core.DataModel.Model.LeaderShipModel> leaderships = (IList<Site.Core.DataModel.Model.LeaderShipModel>)ViewBag.Leaderships;
                                    for (int i = 0; i < leaderships.Count; i++)
                                    {
                                        <tr id="@leaderships[i].LeaderShipID">
                                            <td class="with-checkbox">
                                                <input type="checkbox" name="check" value="@leaderships[i].LeaderShipID">
                                            </td>
                                            <td>@leaderships[i].Organization</td>
                                            <td>@leaderships[i].Position</td>
                                            <td>@leaderships[i].FromDate.ToShortDateString()</td>
                                            <td>@(leaderships[i].EndDate.HasValue ? leaderships[i].EndDate.Value.ToShortDateString() : "")</td>
                                            <td>@(leaderships[i].Duties.Length > 50 ? leaderships[i].Duties.Substring(0, 45) + "..." : leaderships[i].Duties)</td>
                                            <td class='hidden-480'>
                                                <a href='javascript:void(0)' onclick="showLeadership('@leaderships[i].LeaderShipID')" class="btn" rel="tooltip" title="View">
                                                    <i class="fa fa-edit"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>

                    </div>
                    <!--End leader ship-->

                    <!--Start publication-->
                    <div class="tab-pane" id="t15">
                        <table class="table table-hover table-nomargin table-bordered dataTable dataTable-column_filter"
                               data-column_filter_types="null,text,text,text,text,null"
                               data-column_filter_dateformat="dd-mm-yy" data-nosort="0" data-checkall="all">
                            <thead>
                                <tr>
                                    <th class='with-checkbox'>
                                        <input type="checkbox" name="check_all" class="dataTable-checkall">
                                    </th>
                                    <th>Title</th>
                                    <th>Source</th>
                                    <th>Years</th>
                                    <th>URL</th>
                                    <th class='hidden-480'>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewBag.Publications != null)
                                {
                                    IList<Site.Core.DataModel.Model.PublicationModel> publications = (IList<Site.Core.DataModel.Model.PublicationModel>)ViewBag.Publications;
                                    for (int i = 0; i < publications.Count; i++)
                                    {
                                        <tr id="@publications[i].PublicationID">
                                            <td class="with-checkbox">
                                                <input type="checkbox" name="check" value="@publications[i].PublicationID">
                                            </td>
                                            <td>@publications[i].Title</td>
                                            <td>@publications[i].Source</td>
                                            <td>@publications[i].Year</td>
                                            <td>@publications[i].URL</td>
                                            <td class='hidden-480'>
                                                <a href='javascript:void(0)' onclick="showPublication('@publications[i].PublicationID')" class="btn" rel="tooltip" title="View">
                                                    <i class="fa fa-edit"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>

                    </div>
                    <!--End publication-->
                        
                    <!--Start payments-->
                    <div class="tab-pane" id="t16">
                        <div class="highlight-toolbar">
                            <div class="pull-left">

                            </div>
                            <div class="pull-right">
                                <div class="btn-toolbar">
                                    <div class="btn-group">
                                        <a href='@Url.Action("CreatePayment", "AdminUser", new { @UserId = Model.UserID})' class="btn btn-blue" rel="tooltip" title="Thêm mới payment">
                                            <i class="fa fa-cloud-upload"></i>Thêm mới
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <table class="table table-hover table-nomargin table-bordered dataTable dataTable-column_filter"
                               data-column_filter_types="null,text,text,text,text,select,text,null" 
                               data-column_filter_dateformat="dd-mm-yy" data-nosort="0" data-checkall="all">
                            <thead>
                                <tr>
                                    <th class='with-checkbox'>
                                        <input type="checkbox" name="check_all" class="dataTable-checkall">
                                    </th>
                                    <th>Payment Type</th>
                                    <th>Merch Reference</th>
                                    <th>Amount</th>
                                    <th>Paid Date</th>
                                    <th>Status</th>
                                    <th>Log</th>
                                    <th class='hidden-480'>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewBag.Payments != null)
                                {
                                    IList<Site.Core.DataModel.Model.PaymentModel> payments = (IList<Site.Core.DataModel.Model.PaymentModel>)ViewBag.Payments;
                                    for (int i = 0; i < payments.Count; i++)
                                    {
                                        <tr id="@payments[i].PaymentID">
                                            <td class="with-checkbox">
                                                <input type="checkbox" name="check" value="@payments[i].PaymentID">
                                            </td>
                                            <td>@payments[i].PaymentType</td>
                                            <td>@payments[i].MerchRef</td>
                                            <td>@String.Format("{0:0,0.00}", payments[i].Amount) VND</td>
                                            <td>@payments[i].CreatedDate.ToShortDateString()</td>
                                            <td>@(Enum.GetName(typeof(Site.Core.DataModel.Enum.PaymentStatus), payments[i].Status))</td>
                                            <td>@payments[i].Log</td>
                                            <td class='hidden-480'>
                                                <a href='@Url.Action("UpdatePayment", "AdminUser", new { paymentID = payments[i].PaymentID })' class="btn" rel="tooltip" title="Sửa">
                                                    <i class="fa fa-edit"></i>
                                                </a>
                                                <a href="#" class="btn" rel="tooltip" title="Xóa" onclick="return deletePayment('@payments[i].PaymentID')" id="btn_@payments[i].PaymentID">
                                                    <i class="fa fa-times"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>

                    </div>
                    <!--End payments-->

                    <!--Start Logistic Arrangement-->
                    <div class="tab-pane" id="t17">
                        <div class="box-content nopadding">
                            @using (Html.BeginForm("SaveLogisticInfo", "AdminUser", FormMethod.Post, new { @class = "form-horizontal form-bordered", @id = "frmSaveLogistic" }))
                            {
                                var logistic = ViewBag.Logistic != null ? (Site.Core.DataModel.Model.LogisticScheduleModel) ViewBag.Logistic : new Site.Core.DataModel.Model.LogisticScheduleModel();
                                Model.Logistic = logistic;
                                
                                @Html.HiddenFor(m => m.UserID)
                                @Html.HiddenFor(m => m.Logistic.LogisticID, new { @id = "LogisticID" })
                                <div class="form-group">
                                    <label for="ArrivalDate" class="control-label col-sm-2">Arrival date time</label>
                                    <div class="col-sm-10">
                                        <input type="text" id="ArrivalDate" class="form-control" name="ArrivalDate" value="@(Model.Logistic.ArrivalDate != null ? Model.Logistic.ArrivalDate.Value.ToString("yyyy/MM/dd HH:mm") : DateTime.Now.ToString("yyyy/MM/dd HH:mm"))" />
                                        @Html.ValidationMessageFor(m => m.Logistic.ArrivalDate)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="ArrivalFlightNumber" class="control-label col-sm-2">Flight number</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.Logistic.ArrivalFlightNumber, new { @class = "form-control", @id = "ArrivalFlightNumber" })
                                        @Html.ValidationMessageFor(m => m.Logistic.ArrivalFlightNumber)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="ArrivalGate" class="control-label col-sm-2">Arrival Gate</label>
                                    <div class="col-sm-10">
                                        <div class="check-demo-col">
                                            <div class="check-line">
                                                <input type="radio" name="ArrivalGate" id="ArrivalGate" class='icheck-me' data-skin="square" data-color="blue" value="Domestic" @(Model.Logistic.ArrivalGate == "Domestic" ? "checked" : "")>
                                                <label class='inline' for="ArrivalGate">Domestic</label>
                                            </div>
                                            <div class="check-line">
                                                <input type="radio" name="ArrivalGate" id="ArrivalGate" class='icheck-me' data-skin="square" data-color="blue" value="International" @(Model.Logistic.ArrivalGate == "International" ? "checked" : "")>
                                                <label class='inline' for="ArrivalGate">International</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="DepartureDate" class="control-label col-sm-2">Departure date time</label>
                                    <div class="col-sm-10">
                                        <input type="text" id="DepartureDate" class="form-control" name="DepartureDate" value="@(Model.Logistic.DepartureDate != null ? Model.Logistic.DepartureDate.Value.ToString("yyyy/MM/dd HH:mm") : DateTime.Now.ToString("yyyy/MM/dd HH:mm"))" />
                                        @Html.ValidationMessageFor(m => m.Logistic.DepartureDate)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="DepartureFlightNumber" class="control-label col-sm-2">Flight number</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(m => m.Logistic.DepartureFlightNumber, new { @class = "form-control", @id = "DepartureFlightNumber" })
                                        @Html.ValidationMessageFor(m => m.Logistic.DepartureFlightNumber)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="DepartureGate" class="control-label col-sm-2">Departure Gate</label>
                                    <div class="col-sm-10">
                                        <div class="check-demo-col">
                                            <div class="check-line">
                                                <input type="radio" name="DepartureGate" id="DepartureGate" class='icheck-me' data-skin="square" data-color="blue" value="Domestic" @(Model.Logistic.DepartureGate == "Domestic" ? "checked" : "")>
                                                <label class='inline' for="DepartureGate">Domestic</label>
                                            </div>
                                            <div class="check-line">
                                                <input type="radio" name="DepartureGate" id="DepartureGate" class='icheck-me' data-skin="square" data-color="blue" value="International" @(Model.Logistic.DepartureGate == "International" ? "checked" : "")>
                                                <label class='inline' for="DepartureGate">International</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="ArrivalDay" class="control-label col-sm-2">When do you need airport pick up/drop off service?</label>
                                    <div class="col-sm-10">
                                        <div class="check-demo-col">
                                            <div class="check-line">
                                                <input type="checkbox" name="WhenNeedPick" id="ArrivalDay" class='icheck-me' data-skin="square" data-color="blue" value="Arrival day" @(!string.IsNullOrEmpty(Model.Logistic.WhenNeedPick) && Model.Logistic.WhenNeedPick.Contains("Arrival day") ? "checked" : "")>
                                                <label class='inline' for="ArrivalDay">Arrival day</label>
                                            </div>
                                            <div class="check-line">
                                                <input type="checkbox" name="WhenNeedPick" id="DepartureDay" class='icheck-me' data-skin="square" data-color="blue" value="Departure day" @(!string.IsNullOrEmpty(Model.Logistic.WhenNeedPick) && Model.Logistic.WhenNeedPick.Contains("Departure day") ? "checked" : "")>
                                                <label class='inline' for="DepartureDay">Departure day</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="SpecialRequirement" class="control-label col-sm-2">Special requirement</label>
                                    <div class="col-sm-10">
                                        @Html.TextAreaFor(m => m.Logistic.SpecialRequirement, new { @class = "form-control", @id = "SpecialRequirement" })
                                        @Html.ValidationMessageFor(m => m.Logistic.SpecialRequirement)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="HotelName" class="control-label col-sm-2">Hotel name</label>
                                    <div class="col-sm-10">
                                        <select class="form-control" id="HotelName" name="HotelName">
                                            <option value="Novotel Ha Long (4 stars)" @(Model.Logistic.HotelName == "Novotel Ha Long (4 stars)" ? "selected" : "")>Novotel Ha Long (4 stars)</option>
                                            <option value="Sai Gon Ha Long (4 stars)" @(Model.Logistic.HotelName == "Sai Gon Ha Long (4 stars)" ? "selected" : "")>Sai Gon Ha Long (4 stars)</option>
                                            <option value="Halong Pearl Hotel (3 stars)" @(Model.Logistic.HotelName == "Halong Pearl Hotel (3 stars)" ? "selected" : "")>Halong Pearl Hotel (3 stars)</option>
                                            <option value="Golden Lotus (3 stars)" @(Model.Logistic.HotelName == "Golden Lotus (3 stars)" ? "selected" : "")>Golden Lotus (3 stars)</option>
                                            <option value="Bach Dang (3 stars)" @(Model.Logistic.HotelName == "Bach Dang (3 stars)" ? "selected" : "")>Bach Dang (3 stars)</option>
                                            @if (Model.Logistic.HotelName != "Novotel Ha Long (4 stars)"
                                                && Model.Logistic.HotelName != "Sai Gon Ha Long (4 stars)"
                                                && Model.Logistic.HotelName != "Halong Pearl Hotel (3 stars)"
                                                && Model.Logistic.HotelName != "Golden Lotus (3 stars)"
                                                && Model.Logistic.HotelName != "Bach Dang (3 stars)"
                                                && !string.IsNullOrEmpty(Model.Logistic.HotelName))
                                            {
                                                <option value="@Model.Logistic.HotelName" selected>@Model.Logistic.HotelName</option>   
                                            }
                                            <option value="Other">Other</option>
                                        </select>
                                        <input type="text" class="form-control" id="OtherHotelName" value="" name="OtherHotelName" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="CheckinDate" class="control-label col-sm-2">Checkin date</label>
                                    <div class="col-sm-10">
                                        <input type="text" id="CheckinDate" class="form-control" name="CheckinDate" value="@(Model.Logistic.CheckinDate != null ? Model.Logistic.CheckinDate.Value.ToString("yyyy/MM/dd HH:mm") : DateTime.Now.ToString("yyyy/MM/dd HH:mm"))" />
                                        @Html.ValidationMessageFor(m => m.Logistic.CheckinDate)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="CheckoutDate" class="control-label col-sm-2">Checkout date</label>
                                    <div class="col-sm-10">
                                        <input type="text" id="CheckoutDate" class="form-control" name="CheckoutDate" value="@(Model.Logistic.CheckoutDate != null ? Model.Logistic.CheckoutDate.Value.ToString("yyyy/MM/dd HH:mm") : DateTime.Now.ToString("yyyy/MM/dd HH:mm"))" />
                                        @Html.ValidationMessageFor(m => m.Logistic.CheckoutDate)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="ConferenceRoles" class="control-label col-sm-2">Conference Role</label>
                                    <div class="col-sm-10">
                                        <div class="check-demo-col">
                                            <div class="check-line">
                                                <input type="checkbox" name="ConferenceRoles" id="ISC" class='icheck-me' data-skin="square" data-color="blue" value="ISC" @(!string.IsNullOrEmpty(Model.Logistic.ConferenceRoles) && Model.Logistic.ConferenceRoles.Contains("ISC") ? "checked" : "")>
                                                <label class='inline' for="ISC">ISC</label>
                                            </div>
                                            <div class="check-line">
                                                <input type="checkbox" name="ConferenceRoles" id="Plenary" class='icheck-me' data-skin="square" data-color="blue" value="Plenary" @(!string.IsNullOrEmpty(Model.Logistic.ConferenceRoles) && Model.Logistic.ConferenceRoles.Contains("Plenary") ? "checked" : "")>
                                                <label class='inline' for="Plenary">Plenary</label>
                                            </div>
                                            <div class="check-line">
                                                <input type="checkbox" name="ConferenceRoles" id="OralFull" class='icheck-me' data-skin="square" data-color="blue" value="Oral Full" @(!string.IsNullOrEmpty(Model.Logistic.ConferenceRoles) && Model.Logistic.ConferenceRoles.Contains("Oral Full") ? "checked" : "")>
                                                <label class='inline' for="OralFull">Oral Full</label>
                                            </div>
                                            <div class="check-line">
                                                <input type="checkbox" name="ConferenceRoles" id="OralPartial" class='icheck-me' data-skin="square" data-color="blue" value="Oral Partial" @(!string.IsNullOrEmpty(Model.Logistic.ConferenceRoles) && Model.Logistic.ConferenceRoles.Contains("Oral Partial") ? "checked" : "")>
                                                <label class='inline' for="Oral Partial">Oral Partial</label>
                                            </div>
                                            <div class="check-line">
                                                <input type="checkbox" name="ConferenceRoles" id="OralNone" class='icheck-me' data-skin="square" data-color="blue" value="Oral None" @(!string.IsNullOrEmpty(Model.Logistic.ConferenceRoles) && Model.Logistic.ConferenceRoles.Contains("Oral None") ? "checked" : "")>
                                                <label class='inline' for="OralNone">Oral None</label>
                                            </div>
                                            <div class="check-line">
                                                <input type="checkbox" name="ConferenceRoles" id="Poster" class='icheck-me' data-skin="square" data-color="blue" value="Poster" @(!string.IsNullOrEmpty(Model.Logistic.ConferenceRoles) && Model.Logistic.ConferenceRoles.Contains("Poster") ? "checked" : "")>
                                                <label class='inline' for="Poster">Poster</label>
                                            </div>
                                            <div class="check-line">
                                                <input type="checkbox" name="ConferenceRoles" id="YouthFull" class='icheck-me' data-skin="square" data-color="blue" value="Youth Full" @(!string.IsNullOrEmpty(Model.Logistic.ConferenceRoles) && Model.Logistic.ConferenceRoles.Contains("Youth Full") ? "checked" : "")>
                                                <label class='inline' for="YouthFull">Youth Full</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="AirportService" class="control-label col-sm-2">Airport service</label>
                                    <div class="col-sm-10">
                                        <div class="check-demo-col">
                                            <div class="check-line">
                                                <input type="radio" name="AirportService" id="AirportService" class='icheck-me' data-skin="square" data-color="blue" value="Free pick up" @(Model.Logistic.AirportService == "Free pick up" ? "checked" : "")>
                                                <label class='inline' for="AirportService">Free pick up</label>
                                            </div>
                                            <div class="check-line">
                                                <input type="radio" name="AirportService" id="AirportService" class='icheck-me' data-skin="square" data-color="blue" value="Pay onsite" @(Model.Logistic.AirportService == "Pay onsite" ? "checked" : "")>
                                                <label class='inline' for="AirportService">Pay onsite</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-actions col-sm-offset-2 col-sm-10">
                                    <button type="button" id="btnSaveFlightSchedule" class="btn btn-primary">Lưu Thông Tin</button>
                                </div>
                            }
                        </div>

                    </div>
                    <!--End Logistic Arrangement-->
                </div>
            </div>
        </div>
    </div>
</div>

<!--Logistic-->
<script type="text/javascript">
    $.datetimepicker.setLocale('en');
    $('#ArrivalDate').datetimepicker({ value: $('#ArrivalDate').val(), format: $("#datetimepicker_format_value").val() });
    $('#DepartureDate').datetimepicker({ value: $('#DepartureDate').val(), format: $("#datetimepicker_format_value").val() });
    $('#CheckinDate').datetimepicker({ value: $('#CheckinDate').val(), format: $("#datetimepicker_format_value").val() });
    $('#CheckoutDate').datetimepicker({ value: $('#CheckoutDate').val(), format: $("#datetimepicker_format_value").val() });

    $('#OtherHotelName').hide();
    $('#HotelName').change(function () {
        var selected = $(this).val()
        if (selected == 'Other') {
            $('#OtherHotelName').show();
        } else {
            $('#OtherHotelName').hide();
        }
    });

    $("#btnSaveFlightSchedule").click(function () {
        var arrivalDate = $('#ArrivalDate').val();
        var departureDate = $('#DepartureDate').val();

        if (arrivalDate == '' || departureDate == '') {
            bootbox.alert('Please select the date', function () {
                bootbox.hideAll();
            });
            return;
        }

        var checkinDate = $('#CheckinDate').val();
        var checkoutDate = $('#CheckoutDate').val();
        
        var hotelName = $("#HotelName").find(":selected").val();
        if (hotelName == 'Other') {
            hotelName = $("#OtherHotelName").val();
        }

        $.blockUI({ message: $('#spinner') });
        var formData = new FormData();
        formData.append("UserID", $("#UserID").val());
        formData.append("LogisticID", $("#LogisticID").val());
        formData.append("ArrivalDate", arrivalDate);
        formData.append("ArrivalFlightNumber", $("#ArrivalFlightNumber").val());
        formData.append("ArrivalGate", $("#frmSaveLogistic input[id='ArrivalGate']:checked").val());
        formData.append("DepartureDate", departureDate);
        formData.append("DepartureFlightNumber", $("#DepartureFlightNumber").val());
        formData.append("DepartureGate", $("#frmSaveLogistic input[id='DepartureGate']:checked").val());
        var str = $("#frmSaveLogistic input[id='ArrivalDay']:checked").val() + ',' + $("#frmSaveLogistic input[id='DepartureDay']:checked").val();
        formData.append("WhenNeedPick", str);
        formData.append("SpecialRequirement", $("#SpecialRequirement").val());
        formData.append("HotelName", hotelName);
        formData.append("CheckinDate", checkinDate);
        formData.append("CheckoutDate", checkoutDate);
        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveLogisticInfo", "AdminUser")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (response) {
                $.unblockUI();
                bootbox.alert(response.Message, function () {
                    bootbox.hideAll();
                });
                //Timeout
                if (response.ErrorCode == 2) {
                    window.location = '@Url.Action("Login", "User")';
                }
            },
            error: function (error) {
                $.unblockUI();
                bootbox.alert(error, function () {
                    bootbox.hideAll();
                });
            }
        });
    });
</script>

<script type="text/javascript">
    function deleteAbstract(submitID) {
        bootbox.confirm("Bạn có chắc chắn muốn xóa bản ghi này?", function (result) {
            if (result) {
                $.blockUI({ message: $('#spinner') });
                $.ajax({
                    type: 'GET',
                    contentType: 'application/json',
                    url: '@Url.Action("DeleteAbstract", "AdminUser")',
                    data: { submitID: submitID },
                    success: function (data) {
                        if (data.ErrorCode == 0) {
                            var $el = $("#btn_" + submitID);
                            var $parent = $el.parents("tr");
                            $parent.fadeOut(400, function () {
                                $parent.remove();
                            });
                            bootbox.hideAll();
                        } else {
                            bootbox.alert(data.Message, function () {
                                bootbox.hideAll();
                            });
                        }
                        $.unblockUI();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        bootbox.hideAll();
                        $.unblockUI();
                    }
                });
                return true;
            } else {
                bootbox.hideAll();
                return false;
            }
        });
    }
</script>

<!--Experiences-->
<script type="text/javascript">
    var experienceDialog = [
            '<form method="POST" action="#" id="frmExperience" class="form-horizontal form-bordered">',
                '<div class="box">',
                    '<div class="box-content nopadding">',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Organization (Full name)</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{Organization}" maxlength="50" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Position</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{Position}" maxlength="50" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Working from</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{WorkingStart}" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Working to</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{WorkingEnd}" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Duties</label>',
                            '<div class="col-sm-10">',
                                '<textarea rows="3" maxlength="150" class="form-control" data-rule-required="true" readonly>{Duties}</textarea>',
                            '</div>',
                        '</div>',
                    '</div>',
                '</div>',
            '</form>'
    ].join("\n");

    function showExperience(workingID) {
        $.ajax({
            type: 'GET',
            contentType: 'application/json',
            url: '@Url.Action("GetWorkingExperience", "AdminUser")',
            data: { workingID: workingID },
            success: function (response) {
                $.unblockUI();
                if (response.ErrorCode != null && response.ErrorCode == 0) {
                    //Replace values
                    experienceDialog = experienceDialog
                        .replace(/\{Organization\}/ig, response.Item.Organization)
                        .replace(/\{Position\}/ig, response.Item.Position)
                        .replace(/\{WorkingStart\}/ig, appUtil.utility.parseJsonDate(response.Item.WorkingStart))
                        .replace(/\{WorkingEnd\}/ig, appUtil.utility.parseJsonDate(response.Item.WorkingEnd))
                        .replace(/\{Duties\}/ig, response.Item.Duties);

                    bootbox.dialog({
                        message: experienceDialog,
                        title: "View working experience",
                        buttons: {
                            danger: {
                                label: "Close",
                                className: "btn-danger",
                                callback: function () {
                                    bootbox.hideAll();
                                }
                            }
                        }
                    });
                } else {
                    bootbox.alert(response.Message, function () {
                        bootbox.hideAll();
                    });
                }
            },
            error: function (error) {
                $.unblockUI();
            }
        });
    }
</script>

<!--Education-->
<script type="text/javascript">
    var educationDialog = [
            '<form method="POST" action="#" id="frmEducation" class="form-horizontal form-bordered">',
                '<div class="box">',
                    '<div class="box-content nopadding">',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Degree</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{Degree}" maxlength="50" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Country</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{Country}" maxlength="50" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">EducationStart</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{EducationStart}" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">EducationEnd</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{EducationEnd}" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">MainCourseStudy</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{MainCourseStudy}" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">TypeOfTraining</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{TypeOfTraining}" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                    '</div>',
                '</div>',
            '</form>'
    ].join("\n");

    function showEducation(educationID) {
        $.ajax({
            type: 'GET',
            contentType: 'application/json',
            url: '@Url.Action("GetEducation", "AdminUser")',
            data: { educationID: educationID },
            success: function (response) {
                $.unblockUI();
                if (response.ErrorCode != null && response.ErrorCode == 0) {
                    //Replace values
                    educationDialog = educationDialog
                        .replace(/\{Degree\}/ig, response.Item.Degree)
                        .replace(/\{Country\}/ig, response.Item.Country)
                        .replace(/\{EducationStart\}/ig, appUtil.utility.parseJsonDate(response.Item.EducationStart))
                        .replace(/\{EducationEnd\}/ig, appUtil.utility.parseJsonDate(response.Item.EducationEnd))
                        .replace(/\{MainCourseStudy\}/ig, response.Item.MainCourseStudy)
                        .replace(/\{TypeOfTraining\}/ig, response.Item.TypeOfTraining);

                    bootbox.dialog({
                        message: educationDialog,
                        title: "View education",
                        buttons: {
                            danger: {
                                label: "Close",
                                className: "btn-danger",
                                callback: function () {
                                    bootbox.hideAll();
                                }
                            }
                        }
                    });
                } else {
                    bootbox.alert(response.Message, function () {
                        bootbox.hideAll();
                    });
                }
            },
            error: function (error) {
                $.unblockUI();
            }
        });
    }
</script>

<!--Training-->
<script type="text/javascript">
    var trainingDialog = [
            '<form method="POST" action="#" id="frmTraining" class="form-horizontal form-bordered">',
                '<div class="box">',
                    '<div class="box-content nopadding">',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">NameOfCourse</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{NameOfCourse}" maxlength="50" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Country</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{Country}" maxlength="50" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">EducationStart</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{TrainingStart}" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">EducationEnd</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{TrainingEnd}" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">MainCourseStudy</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{TypeOfTraining}" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                    '</div>',
                '</div>',
            '</form>'
    ].join("\n");

    function showTraining(trainingID) {
        $.ajax({
            type: 'GET',
            contentType: 'application/json',
            url: '@Url.Action("GetTraining", "AdminUser")',
            data: { trainingID: trainingID },
            success: function (response) {
                $.unblockUI();
                if (response.ErrorCode != null && response.ErrorCode == 0) {
                    //Replace values
                    trainingDialog = trainingDialog
                        .replace(/\{NameOfCourse\}/ig, response.Item.NameOfCourse)
                        .replace(/\{Country\}/ig, response.Item.Country)
                        .replace(/\{TrainingStart\}/ig, appUtil.utility.parseJsonDate(response.Item.TrainingStart))
                        .replace(/\{TrainingEnd\}/ig, appUtil.utility.parseJsonDate(response.Item.TrainingEnd))
                        .replace(/\{TypeOfTraining\}/ig, response.Item.TypeOfTraining);

                    bootbox.dialog({
                        message: trainingDialog,
                        title: "View additional training",
                        buttons: {
                            danger: {
                                label: "Close",
                                className: "btn-danger",
                                callback: function () {
                                    bootbox.hideAll();
                                }
                            }
                        }
                    });
                } else {
                    bootbox.alert(response.Message, function () {
                        bootbox.hideAll();
                    });
                }
            },
            error: function (error) {
                $.unblockUI();
            }
        });
    }
</script>

<!--Leadership-->
<script type="text/javascript">
    var leadershipDialog = [
            '<form method="POST" action="#" id="frmTraining" class="form-horizontal form-bordered">',
                '<div class="box">',
                    '<div class="box-content nopadding">',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Organization</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{Organization}" maxlength="50" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Position</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{Position}" maxlength="50" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">From</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{FromDate}" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">To</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{EndDate}" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Duties</label>',
                            '<div class="col-sm-10">',
                                '<textarea rows="3" maxlength="150" class="form-control" data-rule-required="true" readonly>{Duties}</textarea>',
                            '</div>',
                        '</div>',
                    '</div>',
                '</div>',
            '</form>'
    ].join("\n");

    function showLeadership(leadershipID) {
        $.ajax({
            type: 'GET',
            contentType: 'application/json',
            url: '@Url.Action("GetLeadership", "AdminUser")',
            data: { leadershipID: leadershipID },
            success: function (response) {
                $.unblockUI();
                if (response.ErrorCode != null && response.ErrorCode == 0) {
                    //Replace values
                    leadershipDialog = leadershipDialog
                        .replace(/\{Organization\}/ig, response.Item.Organization)
                        .replace(/\{Position\}/ig, response.Item.Position)
                        .replace(/\{FromDate\}/ig, appUtil.utility.parseJsonDate(response.Item.FromDate))
                        .replace(/\{EndDate\}/ig, appUtil.utility.parseJsonDate(response.Item.EndDate))
                        .replace(/\{Duties\}/ig, response.Item.Duties);

                    bootbox.dialog({
                        message: leadershipDialog,
                        title: "View leadership experience",
                        buttons: {
                            danger: {
                                label: "Close",
                                className: "btn-danger",
                                callback: function () {
                                    bootbox.hideAll();
                                }
                            }
                        }
                    });
                } else {
                    bootbox.alert(response.Message, function () {
                        bootbox.hideAll();
                    });
                }
            },
            error: function (error) {
                $.unblockUI();
            }
        });
    }
</script>

<!--Publication-->
<script type="text/javascript">
    var publicationDialog = [
            '<form method="POST" action="#" id="frmTraining" class="form-horizontal form-bordered">',
                '<div class="box">',
                    '<div class="box-content nopadding">',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Title</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{Title}" maxlength="50" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Source</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{Source}" maxlength="50" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">Year</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{Year}" maxlength="50" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                        '<div class="form-group">',
                            '<label for="textfield" class="control-label col-sm-2">URL</label>',
                            '<div class="col-sm-10">',
                                '<input type="text" value="{URL}" maxlength="50" class="form-control" data-rule-required="true" readonly>',
                            '</div>',
                        '</div>',
                    '</div>',
                '</div>',
            '</form>'
    ].join("\n");

    function showPublication(publicationID) {
        $.ajax({
            type: 'GET',
            contentType: 'application/json',
            url: '@Url.Action("GetPublication", "AdminUser")',
            data: { publicationID: publicationID },
            success: function (response) {
                $.unblockUI();
                if (response.ErrorCode != null && response.ErrorCode == 0) {
                    //Replace values
                    publicationDialog = publicationDialog
                        .replace(/\{Title\}/ig, response.Item.Title)
                        .replace(/\{Source\}/ig, response.Item.Source)
                        .replace(/\{Year\}/ig, response.Item.Year)
                        .replace(/\{URL\}/ig, response.Item.URL);

                    bootbox.dialog({
                        message: publicationDialog,
                        title: "View publication",
                        buttons: {
                            danger: {
                                label: "Close",
                                className: "btn-danger",
                                callback: function () {
                                    bootbox.hideAll();
                                }
                            }
                        }
                    });
                } else {
                    bootbox.alert(response.Message, function () {
                        bootbox.hideAll();
                    });
                }
            },
            error: function (error) {
                $.unblockUI();
            }
        });
    }
</script>

<!--Payments-->
<script type="text/javascript">
    function deletePayment(paymentID) {
        bootbox.confirm("Bạn có chắc chắn muốn xóa bản ghi này?", function (result) {
            if (result) {
                $.ajax({
                    type: 'GET',
                    contentType: 'application/json',
                    url: '@Url.Action("DeletePayment", "AdminUser")',
                    data: { paymentID: paymentID },
                    success: function (data) {
                        if (data.ErrorCode == 0) {
                            var $el = $("#btn_" + paymentID);
                            var $parent = $el.parents("tr");
                            $parent.fadeOut(400, function () {
                                $parent.remove();
                            });
                            bootbox.hideAll();
                        } else {
                            bootbox.alert(data.Message, function () {
                                bootbox.hideAll();
                            });
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        bootbox.hideAll();
                    }
                });
                return true;
            } else {
                bootbox.hideAll();
                return false;
            }
        });
    }

</script>